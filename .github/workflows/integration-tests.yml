name: Integration tests

on:
  push:
    branches:
      - dev
    paths-ignore:
      - "docs/**"
      - ".github/**"
      - "README.md"
  pull_request:
    branches:
      - master
      - dev
    paths-ignore:
      - "docs/**"
      - ".github/**"
      - "README.md"

# Pending or running workflows for the same branch will be cancelled,
# always keep the latest.
concurrency:
  group: integration-tests-${{ github.ref }}
  cancel-in-progress: true

jobs:
  integration-tests:
    runs-on: [self-hosted, Linux, X64]
    environment: integration-tests
    strategy:
      # When one test fails, do not cancel other runs, because this will
      # kill Cypress processes leaving the Dashboard hanging. This
      # behaviour might be modifiable in the paid version.
      # https://github.com/cypress-io/github-action/issues/48
      fail-fast: false
      matrix:
        # For parallelism. See the link if you plan to increase it.
        # https://docs.cypress.io/guides/guides/parallelization#Run-completion-delay
        instance: [1]

    steps:
      # Necessary because orchest might make the owner of the userdir
      # root, which will break the checkout action.
      - name: chown workspace
        run: sudo chown -R $USER:$USER ${{ github.workspace }}

      - name: Checkout
        uses: actions/checkout@v2

      - name: Install dependencies
        run: pnpm i --filter '@orchest/cypress'

      # Cleanup state before running tests.
      - name: Pre cleanup
        run: |
          killall Cypress || echo "Did not need to kill Cypress."
          killall nodejs || echo "Did not need to kill Node.js."
          killall chrome || echo "Did not need to kill Chrome."
          ./orchest stop
          [ ! -z "$(docker ps -a -q)" ] && docker rm -fv $(docker ps -a -q)
          docker image prune -f
          [ ! -z "$(docker images --filter 'label=_orchest_project_uuid' -q)" ] && docker rmi -f $(docker images --filter "label=_orchest_project_uuid" -q)
          bash scripts/clean_userdir.sh

      # Orchest won't be able to write files that are part of a project
      # that was copied in the existing project directory otherwise.
      - name: Fix group w/x permissions.
        run: chmod 775 -R ${{ github.workspace }}

      - name: Build and Start Orchest
        run: |
          bash scripts/build_container.sh
          ./orchest start --cloud

      # Can't use the action provided by cypress because of
      # https://github.com/cypress-io/github-action/issues/145.
      - name: Run tests
        run: |
          umask 002 && scripts/run_integration_tests.sh -a -- --record \
          --parallel --group "Integration tests"
        env:
          CYPRESS_PROJECT_ID: ${{ secrets.CYPRESS_PROJECT_ID }}
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
          # Recommended: passing the GitHub token lets this action
          # correctly determine the unique run id necessary to re-run
          # the checks.
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Avoid consuming compute if Cypress leaves dangling processes.
      - name: Post cleanup
        if: always()
        run: |
          killall Cypress || echo "Did not need to kill Cypress."
          killall nodejs || echo "Did not need to kill Node.js."
          killall chrome || echo "Did not need to kill Chrome."
