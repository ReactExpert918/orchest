# Runs pre-commit on changed files only.
name: pre-commit

on:
  push:
    branches:
      - master
      - dev
      - "release/**"
  pull_request:
    branches:
      - master
      - dev
      - "release/**"

jobs:
  pre-commit:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        # NOTE: This will fetch the entire git history which is needed for the
        # `github.event.before`.
        # TODO: Not sure how slow this is.
        with:
          fetch-depth: 0

      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Get changed files
        id: getChangedFiles
        run: |
          if [[ "${{ github.event.before }}" = "" ]]; then
            echo "First deployment of new branch"
            # Piped into xargs so that all the lines are outputted in a single line (so no newline
            # characters).
            CHANGEDFILES="$(git diff --name-only origin/${{ github.event.pull_request.base.ref }} ${{ github.sha }} | xargs)"
          else
            echo "Not the first deployment"
            # Piped into xargs so that all the lines are outputted in a single line (so no newline
            # characters).
            CHANGEDFILES="$(git diff --name-only ${{ github.event.before}} ${{ github.sha }} | xargs)"
          fi
          echo Found changed files: "$CHANGEDFILES"
          # https://docs.github.com/en/actions/learn-github-actions/workflow-commands-for-github-actions#setting-an-output-parameter
          echo "::set-output name=changed_files::$CHANGEDFILES"

      - uses: pre-commit/action@v2.0.0
        with:
          # https://docs.github.com/en/actions/learn-github-actions/contexts#steps-context
          extra_args: --files ${{ steps.getChangedFiles.outputs.changed_files }}
